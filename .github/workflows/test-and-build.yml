name: Test and Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - github-action

env:
  DR_VERSION: 4.7
  DR_LICENSE_TIER: pro
  TESTGAME_DIR: .github/workflows/testgame

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download dragonruby
        env:
          DR_PLATFORM: linux-amd64
        run: |
          curl -L -O https://github.com/kfischer-okarin/dragonruby-for-ci/releases/download/$DR_VERSION/dragonruby-for-ci-$DR_VERSION-$DR_LICENSE_TIER-$DR_PLATFORM.zip
          unzip dragonruby-for-ci-$DR_VERSION-$DR_LICENSE_TIER-$DR_PLATFORM.zip
          chmod u+x ./dragonruby
      - name: Build extension
        run: |
          mkdir -p $TESTGAME_DIR/native/linux-amd64/
          clang -shared \
                -isystem include -I . -fPIC \
                -o $TESTGAME_DIR/native/linux-amd64/libsocket.so \
                libsocket-bind.c
      - uses: actions/upload-artifact@v3
        with:
          name: libsocket.so (linux-amd64)
          path: '${{ env.TESTGAME_DIR }}/native/linux-amd64/libsocket.so'
      - name: Run tests
        run: .github/workflows/run_tests.sh
  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          install: mingw-w64-x86_64-clang mingw-w64-x86_64-lld unzip
      - name: Download dragonruby
        env:
          DR_PLATFORM: windows-amd64
        run: |
          curl -L -O https://github.com/kfischer-okarin/dragonruby-for-ci/releases/download/$DR_VERSION/dragonruby-for-ci-$DR_VERSION-$DR_LICENSE_TIER-$DR_PLATFORM.zip
          unzip dragonruby-for-ci-$DR_VERSION-$DR_LICENSE_TIER-$DR_PLATFORM.zip
      - name: Build extension
        run: |
          mkdir -p $TESTGAME_DIR/native/windows-amd64/
          clang -shared \
                --target=x86_64-w64-mingw32 \
                -fuse-ld=lld \
                -isystem include -I . -lws2_32 \
                -o $TESTGAME_DIR/native/windows-amd64/libsocket.dll \
                libsocket-bind.c
      - uses: actions/upload-artifact@v3
        with:
          name: libsocket.dll (windows-amd64)
          path: '${{ env.TESTGAME_DIR }}/native/windows-amd64/libsocket.dll'
      - name: Run tests
        run: .github/workflows/run_tests.sh
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download dragonruby
        env:
          DR_PLATFORM: macos
        run: |
          curl -L -O https://github.com/kfischer-okarin/dragonruby-for-ci/releases/download/$DR_VERSION/dragonruby-for-ci-$DR_VERSION-$DR_LICENSE_TIER-$DR_PLATFORM.zip
          unzip dragonruby-for-ci-$DR_VERSION-$DR_LICENSE_TIER-$DR_PLATFORM.zip
          chmod u+x ./dragonruby
      - name: Build extension
        run: |
          mkdir -p $TESTGAME_DIR/native/macos/
          clang -shared \
                -arch x86_64 -arch arm64 \
                -isystem include -I . -fPIC \
                -o $TESTGAME_DIR/native/macos/libsocket.dylib \
                libsocket-bind.c
      - uses: actions/upload-artifact@v3
        with:
          name: libsocket.dylib (macos)
          path: '${{ env.TESTGAME_DIR }}/native/macos/libsocket.dylib'
      - name: Run tests
        run: .github/workflows/run_tests.sh
